# Upstream definition
upstream vvg_app {
    server app:3000;
    keepalive 32;
}

# HTTP server - redirect to HTTPS in production
server {
    listen 80;
    server_name localhost;  # Replace with your domain

    # Health check endpoint for ALB/ELB
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # For production with SSL, uncomment to redirect
    # return 301 https://$server_name$request_uri;

    # Development/staging - serve HTTP
    location / {
        proxy_pass http://vvg_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Rate limiting
        limit_req zone=general burst=20 nodelay;
    }

    # API endpoints with stricter rate limiting
    location /api/ {
        proxy_pass http://vvg_app;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Stricter rate limiting for API
        limit_req zone=api burst=5 nodelay;
        
        # Disable buffering for SSE/streaming
        proxy_buffering off;
        proxy_cache off;
    }

    # Static assets caching
    location /_next/static/ {
        proxy_pass http://vvg_app;
        proxy_cache_valid 200 365d;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }

    location /static/ {
        proxy_pass http://vvg_app;
        proxy_cache_valid 200 7d;
        expires 7d;
        add_header Cache-Control "public";
    }
}

# HTTPS server configuration (uncomment for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # OCSP stapling
#     ssl_stapling on;
#     ssl_stapling_verify on;
#     
#     # Include the location blocks from above
# }